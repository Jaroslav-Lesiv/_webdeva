{"version":3,"sources":["assets\\js\\main.js"],"names":["create","document","createElement","tagname","div","span","nav","ul","li","strong","a","h3","p","img","button","snakeLink","cloneNode","className","dot","pageShapeUrl","pageShape","append","setStyle","selector","styles","log","Object","entries","key","value","style","navLinks","querySelectorAll","ScrollControl","links","hash","map","link","getAttribute","nodeList","querySelector","addEventListener","sectionHandler","linksHandler","documentElement","clientHeight","windowHeight","node","coords","getBoundingClientRect","isCurrent","top","bottom","updateNavigation","forEach","preventDefault","updateSections","classList","add","remove","scrollTo","find","offsetTop","yyy","json","JSON","stringify","label","url","description","data","parse","_example","_sortExamples","sortKey","filter","item","split","some","_renderExamples","examplesNode","exampleNavigationControl","exampleNavigationControlItem","exampleNavigationControlButton","exampleList","exampleListItem","exampleListItemMedia","exampleListItemContent","cardLink","cardDescription","examples","_cardDescription","innerHTML","example","_cardLink","href","_strong","_use","_useWrapper","use","idx","_link","target","length","display","flexWrap","_cardMedia","_img","src","_pageShapeUrl","_pageShape","_cardContent","_exampleListItem","dataset","sort","sortKeys","_exampleNavigationControlButton","card","btn","_exampleNavigationControlItem","particlesJS","TextBracket","keywords","duration","words","current","createNode","bracket","before","after","wordWrap","word","wordsSelector","_word","textWord","wordSlider","maxWidth","offsetWidth","maxHeight","offsetHeight","update","textBracket","loadImages","LazyLoad","images","checkPosition","isVisible","image","showImage","undefined","elem","topVisible","bottomVisible","_src","Array","prototype","slice","call","lazy","animationHandler","selectors","handle","animate","start","checkScroll"],"mappings":"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","file":"main.3080257b.map","sourceRoot":"..\\src","sourcesContent":["const create = tagname => document.createElement(tagname);\r\n\r\nconst div = create(\"div\");\r\nconst span = create(\"span\");\r\nconst nav = create(\"nav\");\r\nconst ul = create(\"ul\");\r\nconst li = create(\"li\");\r\nconst strong = create(\"strong\");\r\nconst a = create(\"a\");\r\nconst h3 = create(\"h3\");\r\nconst p = create(\"p\");\r\nconst img = create(\"img\");\r\nconst button = create(\"button\");\r\n\r\nconst snakeLink = a.cloneNode(true);\r\nsnakeLink.className = \"snake\";\r\n\r\nconst dot = span.cloneNode();\r\ndot.className = \"dot\";\r\n\r\nconst pageShapeUrl = span.cloneNode();\r\npageShapeUrl.className = \"page-shape-url\";\r\n\r\nconst pageShape = div.cloneNode();\r\npageShape.className = \"page-shape\";\r\n\r\npageShape.append(dot.cloneNode());\r\npageShape.append(dot.cloneNode());\r\npageShape.append(dot.cloneNode());\r\n\r\n// const grnStyle = () => {\r\n//   let s = Math.floor(Math.random() * 10);\r\n//   let t = Math.floor(Math.random() * 4000 + 1000);\r\n//   let x = Math.random() * 80;\r\n//   let y = Math.random() * 80;\r\n//   return {\r\n//     s,\r\n//     t,\r\n//     x,\r\n//     y\r\n//   };\r\n// };\r\n\r\nconst setStyle = (selector, styles = {}) => {\r\n  console.log(styles);\r\n  for (let [key, value] of Object.entries(styles)) {\r\n    selector.style[key] = value;\r\n  }\r\n};\r\n// const icons = [\r\n//   `react`,\r\n//   `babel`,\r\n//   `bootstrap`,\r\n//   \"css3\",\r\n//   \"html5\",\r\n//   \"gulp\",\r\n//   \"vue\",\r\n//   \"github_alt\",\r\n//   \"bitbucket\",\r\n//   \"jira\",\r\n//   \"npm\",\r\n//   \"nodejs\",\r\n//   \"sass\",\r\n//   \"less\",\r\n//   \"stylus\",\r\n//   \"linux\",\r\n//   \"android\",\r\n//   \"apple\",\r\n//   \"vscode\",\r\n//   \"atom\"\r\n// ];\r\n// const blossom = () => {\r\n//   for (let i = 0; i < icons.length; i++) {\r\n//     let icon = document.createElement(\"i\");\r\n//     icon.className = `devicons devicons-${icons[i]}`;\r\n//     icon.style.fontSize = `80px`;\r\n//     const { s, t, x, y } = grnStyle();\r\n\r\n//     requestAnimationFrame(() =>\r\n//       setStyle(\r\n//         {\r\n//           s,\r\n//           t,\r\n//           x,\r\n//           y\r\n//         },\r\n//         icon\r\n//       )\r\n//     );\r\n//     setInterval(() => setStyle(grnStyle(), icon), t * 4);\r\n//     const about = document.querySelector(\"#nav\");\r\n//     about.append(icon);\r\n//   }\r\n// };\r\n\r\n// blossom();\r\n\r\nconst navLinks = document.querySelectorAll(\"#nav ul.list li a\");\r\n\r\nconst ScrollControl = class {\r\n  constructor({ links = [] }) {\r\n    this.hash = null;\r\n\r\n    this.links = [...links].map(link => ({\r\n      selector: link,\r\n      hash: link.getAttribute(\"href\")\r\n    }));\r\n    this.nodeList = [\r\n      ...this.links.map(link => ({\r\n        selector: document.querySelector(link.hash),\r\n        hash: link.hash\r\n      }))\r\n    ];\r\n\r\n    window.addEventListener(\"scroll\", _ => this.sectionHandler());\r\n    this.linksHandler();\r\n  }\r\n\r\n  sectionHandler() {\r\n    const windowHeight = document.documentElement.clientHeight;\r\n    for (let node of this.nodeList) {\r\n      const coords = node.selector.getBoundingClientRect();\r\n      const isCurrent = coords.top >= 0 || coords.bottom - 23 > 0;\r\n      if (isCurrent) {\r\n        this.hash = node.hash;\r\n        this.updateNavigation();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  linksHandler() {\r\n    this.links.forEach(link => {\r\n      link.selector.addEventListener(\"click\", event => {\r\n        event.preventDefault();\r\n        this.hash = link.hash;\r\n        this.updateSections();\r\n      });\r\n    });\r\n  }\r\n  updateNavigation() {\r\n    this.links.forEach(\r\n      link =>\r\n        link.hash === this.hash\r\n          ? link.selector.classList.add(\"btn-primary\")\r\n          : link.selector.classList.remove(\"btn-primary\")\r\n    );\r\n  }\r\n\r\n  updateSections() {\r\n    window.scrollTo({\r\n      top: this.nodeList.find(node => node.hash === this.hash).selector\r\n        .offsetTop,\r\n      behavior: \"smooth\"\r\n    });\r\n  }\r\n};\r\nconst yyy = new ScrollControl({ links: navLinks });\r\n\r\n// examples\r\n\r\nconst json = JSON.stringify({\r\n  sortKeys: [\"all\", \"extension\", \"desktop\", \"mobile\", \"web\"],\r\n  examples: [\r\n    {\r\n      label: `NormalGame`,\r\n      url: `https://normalgame.net`,\r\n      sortKey: `web,react`,\r\n      img: `normalgame.png`,\r\n      use: [\r\n        { label: \"React\", url: \"https://reactjs.org/\" },\r\n        { label: \"redux\", url: \"https://redux.js.org/\" },\r\n        {\r\n          label: \"redux-saga\",\r\n          url: \"https://github.com/redux-saga/redux-saga\"\r\n        },\r\n        { label: \"webpack\", url: \"https://webpack.js.org/\" },\r\n        {\r\n          label: \"styled-components\",\r\n          url: \"https://www.styled-components.com/\"\r\n        },\r\n        { label: \"Laravel\", url: \"http://laravel.su/\" }\r\n      ],\r\n      description: `Using: React, Redux, Webpack, recompose, styled-components, redux-saga`\r\n    },\r\n    {\r\n      label: `JustLabelMe`,\r\n      url: `https://just-label.me`,\r\n      sortKey: `web`,\r\n      img: `justlabelme.png`,\r\n      use: [\r\n        { label: \"JavaScript\", url: \"https://www.javascript.com/\" },\r\n        { label: \"stylus\", url: \"http://stylus-lang.com/\" },\r\n        { label: \"gulp\", url: \"https://gulpjs.com/\" }\r\n      ],\r\n      description: `With JustLabelMe service, you’ll save a lot of time because you can print perfectly onto 4”x6” sticker labels, peel them and place them right on the package!`\r\n    },\r\n    {\r\n      label: `JustLabelMe Extension`,\r\n      url: `https://chrome.google.com/webstore/detail/justlabelme/bpfpmjjojjekdeliaeepcnccikcjpiph`,\r\n      sortKey: `web,extension`,\r\n      img: `justlabelme_ext.jpg`,\r\n      use: [\r\n        { label: \"React\", url: \"https://reactjs.org/\" },\r\n        { label: \"redux\", url: \"https://redux.js.org/\" },\r\n        { label: \"webpack\", url: \"https://webpack.js.org/\" },\r\n        {\r\n          label: \"styled-components\",\r\n          url: \"https://www.styled-components.com/\"\r\n        }\r\n      ],\r\n      description: `Provides the ability to transform & print FBA shipping and product labels while you are on Amazon Seller Central with a single click`\r\n    },\r\n    {\r\n      label: `Widin`,\r\n      url: `https://codingchipmunks.com/widin/`,\r\n      sortKey: `web`,\r\n      img: `widin.png`,\r\n      use: [\r\n        { label: \"JavaScript\", url: \"https://www.javascript.com/\" },\r\n        { label: \"stylus\", url: \"http://stylus-lang.com/\" },\r\n        {\r\n          label: \"pug (jade)\",\r\n          url: \"https://pugjs.org/api/getting-started.html\"\r\n        },\r\n        { label: \"gulp\", url: \"https://gulpjs.com/\" }\r\n      ],\r\n      description: `WidinOnline is a decentralized multifaceted market place set to unify the entire commerce landscape of Africa into a sigle inegrated e-commerce platform`\r\n    },\r\n    {\r\n      label: `nomis`,\r\n      url: `https://nomis.com.ua/`,\r\n      sortKey: `web`,\r\n      img: `nomis.png`,\r\n      use: [\r\n        { label: \"JavaScript\", url: \"https://www.javascript.com/\" },\r\n        { label: \"jQuery\", url: \"https://jquery.com/\" },\r\n        { label: \"sass\", url: \"https://sass-lang.com/\" },\r\n        { label: \"blade\", url: \"http://laravel.su/docs/5.3/blade\" },\r\n        { label: \"gulp\", url: \"https://gulpjs.com/\" },\r\n        { label: \"Laravel\", url: \"http://laravel.su/\" }\r\n      ],\r\n      description: `Check the reliability and solvency of the counterparty`\r\n    }\r\n  ]\r\n});\r\n\r\nconst data = JSON.parse(json);\r\nconst _example = document.querySelector(\"#examples\");\r\n\r\n// const _sortBtn = _example.querySelectorAll('nav ul li btn.btn')\r\n\r\n// _sortBtn.forEach( btn => {\r\n//     btn.addEventListener('click', function() {\r\n//         const sortKey = this.dataset.sort\r\n//     })\r\n// } )\r\n\r\nconst _sortExamples = (sortKey = \"\") =>\r\n  JSON.parse(json).filter(item =>\r\n    item.sortKey.split(\",\").some(key => key === sortKey)\r\n  );\r\n\r\nconst _renderExamples = json => {\r\n  const examplesNode = document.querySelector(\"#examples .examples\");\r\n  const exampleNavigation = nav.cloneNode(true);\r\n  exampleNavigation.className = \"flex flex-align-center flex-justify-sa\";\r\n  const exampleNavigationControl = ul.cloneNode(true);\r\n  exampleNavigationControl.className =\r\n    \"flex flex-align-center flex-justify-sa mb-20\";\r\n  const exampleNavigationControlItem = li.cloneNode(true);\r\n  const exampleNavigationControlButton = button.cloneNode(true);\r\n  exampleNavigationControlButton.className = \"btn text-uppercase\";\r\n\r\n  const exampleList = ul.cloneNode(true);\r\n  exampleList.className =\r\n    \"examples-content flex flex-align-start flex-justify-sa\";\r\n\r\n  const exampleListItem = li.cloneNode(true);\r\n  exampleListItem.className = `card`;\r\n\r\n  const exampleListItemMedia = div.cloneNode(true);\r\n  exampleListItemMedia.className = \"card-media\";\r\n\r\n  const exampleListItemContent = div.cloneNode(true);\r\n  exampleListItemContent.className = `card-content`;\r\n\r\n  const cardLink = snakeLink.cloneNode(true);\r\n  cardLink.className = \"card-label snake\";\r\n\r\n  const cardDescription = p.cloneNode(true);\r\n  cardDescription.className = \"card-description\";\r\n\r\n  data.examples.forEach(example => {\r\n    const _cardDescription = cardDescription.cloneNode(true);\r\n    _cardDescription.innerHTML = example.description;\r\n\r\n    const _cardLink = cardLink.cloneNode(true);\r\n    _cardLink.href = example.url;\r\n    _cardLink.innerHTML = example.label;\r\n\r\n    // const _cardDescription = cardDescription.cloneNode(true)\r\n\r\n    const _strong = strong.cloneNode(true);\r\n    _strong.append(_cardLink);\r\n\r\n    const _use = strong.cloneNode(true);\r\n\r\n    const _useWrapper = p.cloneNode();\r\n    _use.innerHTML = \"Use: \";\r\n    _useWrapper.append(_use);\r\n\r\n    example.use.forEach((use, idx) => {\r\n      const _link = a.cloneNode();\r\n      _link.href = use.url;\r\n      _link.className = \"snake card-link\";\r\n      _link.target = \"_blank\";\r\n      _link.innerHTML = `${use.label}${\r\n        idx === example.use.length - 1 ? \"\" : \",\"\r\n      }`;\r\n      _link.style.display = \"inline-flex\";\r\n      _link.style.flexWrap = \"wrap\";\r\n      _useWrapper.append(_link);\r\n    });\r\n\r\n    // _cardDescription.innerHTML = example.description\r\n\r\n    const _cardMedia = exampleListItemMedia.cloneNode(true);\r\n    const _img = img.cloneNode(true);\r\n    _img.src = `./img/examples/${example.img}`;\r\n\r\n    // const pageShape = img.cloneNode(true)\r\n    // pageShape.src = '/img/page-shape.jpg'\r\n\r\n    const _pageShapeUrl = pageShapeUrl.cloneNode();\r\n    _pageShapeUrl.innerHTML = example.url;\r\n\r\n    const _pageShape = pageShape.cloneNode(true);\r\n    _pageShape.append(_pageShapeUrl);\r\n\r\n    _cardMedia.append(_img);\r\n\r\n    const _cardContent = exampleListItemContent.cloneNode(true);\r\n\r\n    _cardContent.append(_strong);\r\n    _cardContent.append(_useWrapper);\r\n    _cardContent.append(_cardDescription);\r\n\r\n    const _exampleListItem = exampleListItem.cloneNode(true);\r\n    _exampleListItem.dataset.sort = example.sortKey;\r\n\r\n    _exampleListItem.append(_pageShape);\r\n    _exampleListItem.append(_cardMedia);\r\n    _exampleListItem.append(_cardContent);\r\n\r\n    exampleList.append(_exampleListItem);\r\n  });\r\n\r\n  const checkSort = sortKey => {\r\n    exampleList.querySelectorAll(\".card\").forEach(card => {\r\n      // console.log(card, card.dataset.sort)\r\n      if (\r\n        card.dataset.sort.split(\",\").some(key => key === sortKey) ||\r\n        sortKey === \"all\"\r\n      ) {\r\n        card.classList.add(\"show_scale\");\r\n        card.classList.remove(\"hide_scale\");\r\n      } else {\r\n        card.classList.remove(\"show_scale\");\r\n        card.classList.add(\"hide_scale\");\r\n      }\r\n      examplesNode\r\n        .querySelectorAll(\"ul li button[data-sort]\")\r\n        .forEach(btn => btn.classList.remove(\"btn-primary\"));\r\n      examplesNode\r\n        .querySelector(`ul li button[data-sort=\"${sortKey}\"]`)\r\n        .classList.add(\"btn-primary\");\r\n    });\r\n  };\r\n  data.sortKeys.forEach((sortKey, key) => {\r\n    const _exampleNavigationControlButton = exampleNavigationControlButton.cloneNode(\r\n      true\r\n    );\r\n    _exampleNavigationControlButton.innerHTML = sortKey;\r\n    _exampleNavigationControlButton.dataset.sort = sortKey;\r\n    if (!key) _exampleNavigationControlButton.classList.add(\"btn-primary\");\r\n\r\n    _exampleNavigationControlButton.addEventListener(\"click\", function() {\r\n      checkSort(sortKey);\r\n    });\r\n    const _exampleNavigationControlItem = exampleNavigationControlItem.cloneNode(\r\n      true\r\n    );\r\n    _exampleNavigationControlItem.append(_exampleNavigationControlButton);\r\n    exampleNavigationControl.append(_exampleNavigationControlItem);\r\n  });\r\n\r\n  examplesNode.append(exampleNavigationControl);\r\n  examplesNode.append(exampleList);\r\n};\r\n\r\n_renderExamples(data);\r\n\r\n// nav\r\n// const _nav = document.getElementById(\"nav\");\r\n// const checkScroll = () => {\r\n//   if (window.scrollY > _nav.offsetHeight) {\r\n//     _nav.classList.remove(\"transform\");\r\n//     _nav.style.backgroundColor = 'rgba(5, 81, 84, 1);'\r\n//   } else {\r\n//     _nav.classList.add(\"transform\");\r\n//     _nav.style.backgroundColor = `rgba(5,81,84, ${window.scrollY /\r\n//       _nav.offsetHeight +\r\n//       0.4})`;\r\n//   }\r\n// };\r\n\r\n// window.addEventListener(\"scroll\", () => {\r\n//   requestAnimationFrame(checkScroll);\r\n// });\r\n\r\n\r\nparticlesJS(\"particles-js\", {\r\n  particles: {\r\n    number: {\r\n      value: 40,\r\n      density: {\r\n        enable: true,\r\n        value_area: 500\r\n      }\r\n    },\r\n    color: {\r\n      value: \"#59DBD5\"\r\n    },\r\n    shape: {\r\n      type: \"circle\",\r\n      stroke: {\r\n        width: 0,\r\n        color: \"#505050\"\r\n      },\r\n      polygon: {\r\n        nb_sides: 5\r\n      },\r\n      image: {\r\n        src: \"img/github.svg\",\r\n        width: 100,\r\n        height: 100\r\n      }\r\n    },\r\n    opacity: {\r\n      value: 0.5,\r\n      random: false,\r\n      anim: {\r\n        enable: false,\r\n        speed: 1,\r\n        opacity_min: 0.1,\r\n        sync: false\r\n      }\r\n    },\r\n    size: {\r\n      value: 3,\r\n      random: true,\r\n      anim: {\r\n        enable: false,\r\n        speed: 40,\r\n        size_min: 0.1,\r\n        sync: false\r\n      }\r\n    },\r\n    line_linked: {\r\n      enable: true,\r\n      distance: 150,\r\n      color: \"#505050\",\r\n      opacity: 0.4,\r\n      width: 1\r\n    },\r\n    move: {\r\n      enable: true,\r\n      speed: 6,\r\n      direction: \"none\",\r\n      random: false,\r\n      straight: false,\r\n      out_mode: \"out\",\r\n      bounce: false,\r\n      attract: {\r\n        enable: true,\r\n        rotateX: 600,\r\n        rotateY: 1200\r\n      }\r\n    }\r\n  },\r\n  interactivity: {\r\n    detect_on: \"canvas\",\r\n    events: {\r\n      onhover: {\r\n        enable: true,\r\n        mode: \"grab\"\r\n      },\r\n      onclick: {\r\n        enable: true,\r\n        mode: \"push\"\r\n      },\r\n      resize: true\r\n    },\r\n    modes: {\r\n      grab: {\r\n        distance: 140,\r\n        line_linked: {\r\n          opacity: 1\r\n        }\r\n      },\r\n      bubble: {\r\n        distance: 400,\r\n        size: 40,\r\n        duration: 2,\r\n        opacity: 8,\r\n        speed: 3\r\n      },\r\n      repulse: {\r\n        distance: 200,\r\n        duration: 0.4\r\n      },\r\n      push: {\r\n        particles_nb: 4\r\n      },\r\n      remove: {\r\n        particles_nb: 2\r\n      }\r\n    }\r\n  },\r\n  retina_detect: true\r\n});\r\n// bracket text\r\n\r\nconst TextBracket = class {\r\n  constructor({ selector }) {\r\n    if (!selector) return;\r\n    this.selector = selector;\r\n    const { keywords = [], duration = 4000 } = this.selector.dataset;\r\n    this.duration = duration;\r\n    this.words = keywords.split(\",\");\r\n\r\n    this.current = 0;\r\n    this.createNode();\r\n  }\r\n  createNode() {\r\n    const bracket = div.cloneNode();\r\n    const before = h3.cloneNode();\r\n    const after = h3.cloneNode();\r\n    const wordWrap = div.cloneNode();\r\n    this.wordWrap = wordWrap;\r\n    const word = h3.cloneNode();\r\n\r\n    before.className = 'color-primary bold mr-10'\r\n    after.className = 'color-primary bold ml-10'\r\n\r\n    setStyle(word, {\r\n      display: 'inline-flex',\r\n      justifyContent: 'center',\r\n      textTransform: 'uppercase',\r\n      fontWeight: '400',\r\n    })\r\n\r\n    setStyle(bracket, {\r\n      display: \"inline-flex\"\r\n    });\r\n\r\n    setStyle(wordWrap, {\r\n      display: \"flex\",\r\n      overflow: 'hidden',\r\n    });\r\n\r\n    before.innerHTML = \"[\";\r\n    after.innerHTML = \"]\";\r\n\r\n    bracket.append(before, wordWrap, after);\r\n\r\n    let maxWidth = 0;\r\n    let maxHeight = 0;\r\n    this.wordsSelector = this.words.map(textWord => {\r\n      const _word = word.cloneNode(true);\r\n      _word.innerHTML = textWord;\r\n      return _word;\r\n    });\r\n    const wordSlider = div.cloneNode()\r\n    setStyle(wordSlider, {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      transition: '0.4s'\r\n    })\r\n    wordSlider.append(...this.wordsSelector)\r\n    this.wordWrap.append(wordSlider);\r\n\r\n    this.selector.append(bracket);\r\n\r\n    this.maxWidth = `${wordSlider.offsetWidth}px`\r\n    this.maxHeight = this.wordsSelector[0].offsetHeight\r\n    setStyle(this.wordWrap, {\r\n      width: this.maxWidth,\r\n      height: `${this.maxHeight}px`,\r\n      position: \"relative\",\r\n    });\r\n    setStyle(wordSlider, {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n    })\r\n    this.wordSlider = wordSlider\r\n    this.update();\r\n  }\r\n  update() {\r\n    console.log(this.current, this.maxHeight)\r\n    setStyle(this.wordSlider, {\r\n      transform: `translateY(-${this.current * this.maxHeight}px)`\r\n    })\r\n    this.current =\r\n    this.current >= this.wordsSelector.length - 1 ? 0 : this.current + 1;\r\n\r\n    setTimeout(() => this.update(), this.duration);\r\n  }\r\n};\r\nconst textBracket = document.querySelector(\".text-bracket\");\r\nnew TextBracket({ selector: textBracket });\r\n// lazy loading\r\n\r\nconst loadImages = document.querySelectorAll(\".lazy-load\") || [];\r\n\r\nconst LazyLoad = class {\r\n  constructor({ images }) {\r\n    this.images = images;\r\n\r\n    console.log(this.images);\r\n    window.addEventListener(\"scroll\", () => this.checkPosition());\r\n  }\r\n\r\n  checkPosition() {\r\n    this.images.length &&\r\n      this.images.forEach(\r\n        image => (this.isVisible(image) ? this.showImage(image) : undefined)\r\n      );\r\n  }\r\n\r\n  isVisible(elem) {\r\n    const coords = elem.getBoundingClientRect();\r\n\r\n    const windowHeight = document.documentElement.clientHeight;\r\n\r\n    const topVisible = (coords.top + windowHeight / 2) > 0 && coords.top < windowHeight;\r\n    const bottomVisible = coords.bottom < windowHeight + windowHeight / 2 && coords.bottom > 0;\r\n\r\n    return topVisible || bottomVisible;\r\n  }\r\n\r\n  showImage(elem) {\r\n    const _src = elem.getAttribute(\"realsrc\");\r\n    elem.src = _src;\r\n    this.images = Array.prototype.slice\r\n      .call(this.images)\r\n      .filter(image => image !== elem);\r\n  }\r\n};\r\n\r\nconst lazy = new LazyLoad({ images: loadImages });\r\n\r\n\r\nconst animationHandler = class {\r\n  constructor({ selectors }) {\r\n    this.selectors = selectors\r\n    this.handle()\r\n  }\r\n\r\n  handle() {\r\n    this.selectors.forEach(selector => {\r\n      const { animate, start } = selector.dataset;\r\n      switch (start) {\r\n        case \"load\":\r\n          document.addEventListener(\"DOMContentLoaded\", () => {\r\n            selector.classList.add(animate);\r\n          });\r\n        case \"scroll\":\r\n          window.addEventListener(\"scroll\", () => this.checkScroll(selector, animate));\r\n          this.checkScroll(selector, animate)\r\n          break;\r\n    \r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  checkScroll(selector, animate) {\r\n    if (selector.getBoundingClientRect().top <= document.documentElement.clientHeight) {\r\n      selector.classList.add(animate);\r\n    }\r\n\r\n  }\r\n  \r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  new animationHandler({ selectors: [...document.querySelectorAll(\".animated\")] })\r\n})"]}