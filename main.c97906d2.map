{"version":3,"sources":["assets\\js\\config.js","assets\\js\\helper.js","assets\\js\\notification\\index.js","assets\\js\\lazyLoad\\index.js","assets\\js\\navigation\\index.js","assets\\js\\textBracket\\index.js","assets\\js\\examples\\index.js","assets\\js\\contacts\\index.js","assets\\js\\main.js"],"names":["http","secret","config","domain","create","document","createElement","tagname","div","span","nav","ul","li","strong","a","h3","h4","h5","p","img","button","setStyle","selector","styles","log","Object","entries","key","value","style","Http","data","success","url","error","myDomain","_url","xhr","XMLHttpRequest","_secret","json","JSON","stringify","onreadystatechange","readyState","DONE","status","response","open","setRequestHeader","send","NotificationBlock","cloneNode","NotificationContainer","icon","src","NotificationContent","Notification","body","append","anim_show","anim_hide","label","mess","id","Date","prepend","remove","el","querySelector","classList","add","_NotificationContainer","className","_NotificationContent","_icon","_NotificationLabel","innerHTML","_NotificationMessage","_notification","window","loadImages","querySelectorAll","LazyLoad","images","addEventListener","checkPosition","length","forEach","isVisible","image","showImage","undefined","elem","coords","getBoundingClientRect","windowHeight","documentElement","clientHeight","topVisible","top","bottomVisible","bottom","_src","getAttribute","Array","prototype","slice","call","filter","lazy","navLinks","ScrollControl","links","hash","map","link","nodeList","sectionHandler","linksHandler","node","isCurrent","updateNavigation","preventDefault","updateSections","scrollTo","find","offsetTop","MobileControl","isActive","toggle","main","render","TextBracket","dataset","keywords","duration","words","split","current","createNode","bracket","before","after","wordWrap","word","wordsSelector","_word","textWord","wordSlider","maxWidth","offsetWidth","maxHeight","offsetHeight","update","textBracket","imageHandler","e","parentHeight","parentNode","transition","transform","snakeLink","target","copyBtn","setAttribute","alt","dot","pageShapeUrl","pageShape","description","parse","_example","_sortExamples","sortKey","item","some","_renderExamples","examplesNode","exampleNavigationControl","exampleNavigationControlItem","exampleNavigationControlButton","exampleList","exampleListItem","exampleListItemMedia","exampleListItemContent","cardLink","cardDescription","examples","_cardDescription","example","_cardLink","href","_strong","_use","_useWrapper","use","idx","_link","display","flexWrap","_cardMedia","_img","_pageShapeUrl","_copy","range","createRange","selectNode","getSelection","addRange","successful","execCommand","err","removeRange","_pageShape","_cardContent","_exampleListItem","sort","sortKeys","_exampleNavigationControlButton","card","btn","_exampleNavigationControlItem","form","getElementById","message","post","particlesJS","animationHandler","selectors","handle","animate","start","checkScroll","console"],"mappings":"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","file":"main.c97906d2.map","sourceRoot":"..\\src","sourcesContent":["export default {\r\n    secret: 'WCUj3/(iTn.Nw4M]ezy#DU5G&P/0Un',\r\n    domain: 'https://still-journey-84385.herokuapp.com'\r\n}","import config from './config'\r\nconst { secret, domain } = config\r\nconst create = tagname => document.createElement(tagname);\r\n\r\nconst div = create(\"div\");\r\nconst span = create(\"span\");\r\nconst nav = create(\"nav\");\r\nconst ul = create(\"ul\");\r\nconst li = create(\"li\");\r\nconst strong = create(\"strong\");\r\nconst a = create(\"a\");\r\nconst h3 = create(\"h3\");\r\nconst h4 = create(\"h4\");\r\nconst h5 = create(\"h5\");\r\nconst p = create(\"p\");\r\nconst img = create(\"img\");\r\nconst button = create(\"button\");\r\n\r\nconst setStyle = (selector, styles = {}) => {\r\n    console.log(styles);\r\n    for (let [key, value] of Object.entries(styles)) {\r\n      selector.style[key] = value;\r\n    }\r\n  };\r\n\r\nconst Http = class {\r\n  constructor({ secret, domain }) {\r\n    this.secret = secret\r\n    this.domain = domain\r\n  }\r\n\r\n  post({ data, success, error, url, myDomain = true }) {\r\n    const _url = myDomain ? `${this.domain}/${url}` : url  \r\n\r\n    const xhr = new XMLHttpRequest();\r\n\r\n    if (myDomain) data._secret = this.secret\r\n\r\n    const json = JSON.stringify(data)\r\n\r\n    \r\n    \r\n\r\n    xhr.onreadystatechange = () => {\r\n      if(xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {\r\n         success(xhr.response)\r\n      }\r\n    }\r\n\r\n    // Отсылаем объект в формате JSON и с Content-Type application/json\r\n    // Сервер должен уметь такой Content-Type принимать и раскодировать\r\n    xhr.open(\"POST\", _url, true)\r\n    xhr.setRequestHeader('Content-type', 'application/json; charset=utf-8');\r\n    xhr.send(json);\r\n  }\r\n}\r\nconst http = new Http({ secret, domain })\r\n\r\nexport {\r\n    div,\r\n    span,\r\n    nav,\r\n    ul,\r\n    li,\r\n    strong,\r\n    a,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    p,\r\n    img,\r\n    button,\r\n    setStyle,\r\n    http\r\n}","import {\r\n    div,\r\n    span,\r\n    nav,\r\n    ul,\r\n    li,\r\n    strong,\r\n    a,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    p,\r\n    img,\r\n    button,\r\n    setStyle\r\n} from '../helper'\r\n\r\nconst NotificationBlock = div.cloneNode()\r\nsetStyle(NotificationBlock, {\r\n    position: 'fixed',\r\n    right: '15px',\r\n    bottom: '15px',\r\n    padding: '10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n})\r\n\r\nconst NotificationContainer = div.cloneNode()\r\nsetStyle(NotificationContainer, {\r\n    padding: '2px 25px',\r\n    borderRadius: '3px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    boxShadow: '0 3px 13px 1px rgba(0,0,0,0.12)',\r\n    backgroundColor: '#ffffff',\r\n    margin: '5px 0',\r\n    minWidth: '250px'\r\n})\r\n\r\n\r\nconst icon = img.cloneNode()\r\nicon.src = './img/icon/mail.png'\r\nsetStyle(icon, {\r\n    width: '35px',\r\n    height: '35px',\r\n    marginRight: '15px'\r\n})\r\n\r\nconst NotificationContent = div.cloneNode()\r\nsetStyle(NotificationContent, {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexGrow: 1\r\n})\r\nconst Notification = class {\r\n    constructor() {\r\n        this.NotificationBlock = NotificationBlock\r\n        document.body.append(NotificationBlock)\r\n        this.anim_show = 'slideInRight'\r\n        this.anim_hide = 'slideOutRight'\r\n    }\r\n    \r\n\r\n    add({ label, mess }) {\r\n        let id = `_${+new Date()}`\r\n        this.NotificationBlock.prepend( this.create({ label, mess, id }) )\r\n        setTimeout( () => this.remove(id), 3000 )\r\n    }\r\n\r\n    remove(id) {\r\n        const el = this.NotificationBlock.querySelector(`#${id}`)\r\n        el.classList.remove(this.anim_show)\r\n        el.classList.add(this.anim_hide)\r\n        setTimeout( () => el.remove(), 500 )\r\n    }\r\n    create({ label, mess, id }) {\r\n        const _NotificationContainer = NotificationContainer.cloneNode()\r\n        _NotificationContainer.id = id\r\n        _NotificationContainer.className = `transition ${this.anim_show}`\r\n        const _NotificationContent = NotificationContent.cloneNode()\r\n\r\n        const _icon = icon.cloneNode()\r\n\r\n        const _NotificationLabel = h4.cloneNode()\r\n        _NotificationLabel.className = 'card-label snake'\r\n        _NotificationLabel.innerHTML = label\r\n\r\n        const _NotificationMessage = p.cloneNode()\r\n        _NotificationMessage.className = 'description'\r\n        _NotificationMessage.innerHTML = mess\r\n\r\n        _NotificationContent.append(_NotificationLabel, _NotificationMessage)\r\n        _NotificationContainer.append(_icon, _NotificationContent)\r\n\r\n        return _NotificationContainer\r\n    }\r\n}\r\n\r\n    export const _notification = new Notification()\r\n    window._notification = _notification","const loadImages = document.querySelectorAll(\".lazy-load\") || [];\r\n\r\nconst LazyLoad = class {\r\n    constructor({\r\n        images\r\n    }) {\r\n        this.images = images;\r\n\r\n        console.log(this.images);\r\n        window.addEventListener(\"scroll\", () => this.checkPosition());\r\n    }\r\n\r\n    checkPosition() {\r\n        this.images.length &&\r\n            this.images.forEach(\r\n                image => (this.isVisible(image) ? this.showImage(image) : undefined)\r\n            );\r\n    }\r\n\r\n    isVisible(elem) {\r\n        const coords = elem.getBoundingClientRect();\r\n\r\n        const windowHeight = document.documentElement.clientHeight;\r\n\r\n        const topVisible = (coords.top + windowHeight / 2) > 0 && coords.top < windowHeight;\r\n        const bottomVisible = coords.bottom < windowHeight + windowHeight / 2 && coords.bottom > 0;\r\n\r\n        return topVisible || bottomVisible;\r\n    }\r\n\r\n    showImage(elem) {\r\n        const _src = elem.getAttribute(\"realsrc\");\r\n        elem.src = _src;\r\n        this.images = Array.prototype.slice\r\n            .call(this.images)\r\n            .filter(image => image !== elem);\r\n    }\r\n};\r\n\r\nconst lazy = new LazyLoad({\r\n    images: loadImages\r\n});","import {\r\n    div,\r\n    span,\r\n    nav,\r\n    ul,\r\n    li,\r\n    strong,\r\n    a,\r\n    h3,\r\n    p,\r\n    img,\r\n    button,\r\n    setStyle\r\n} from '../helper'\r\n\r\n\r\nconst navLinks = document.querySelectorAll(\"#nav ul.list li a\");\r\n\r\nconst ScrollControl = class {\r\n    constructor({\r\n        links = []\r\n    }) {\r\n        this.hash = null;\r\n\r\n        this.links = [...links].map(link => ({\r\n            selector: link,\r\n            hash: link.getAttribute(\"href\")\r\n        }));\r\n        this.nodeList = [\r\n            ...this.links.map(link => ({\r\n                selector: document.querySelector(link.hash),\r\n                hash: link.hash\r\n            }))\r\n        ];\r\n\r\n        window.addEventListener(\"scroll\", _ => this.sectionHandler());\r\n        this.linksHandler();\r\n    }\r\n\r\n    sectionHandler() {\r\n        const windowHeight = document.documentElement.clientHeight;\r\n        for (let node of this.nodeList) {\r\n            const coords = node.selector.getBoundingClientRect();\r\n            const isCurrent = coords.top >= 0 || coords.bottom - 40 > 0;\r\n            if (isCurrent) {\r\n                this.hash = node.hash;\r\n                this.updateNavigation();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    linksHandler() {\r\n        this.links.forEach(link => {\r\n            link.selector.addEventListener(\"click\", event => {\r\n                event.preventDefault();\r\n                this.hash = link.hash;\r\n                this.updateSections();\r\n            });\r\n        });\r\n    }\r\n    updateNavigation() {\r\n        this.links.forEach(\r\n            link =>\r\n            link.hash === this.hash ?\r\n            link.selector.classList.add(\"btn-primary\") :\r\n            link.selector.classList.remove(\"btn-primary\")\r\n        );\r\n    }\r\n\r\n    updateSections() {\r\n        window.scrollTo({\r\n            top: this.nodeList.find(node => node.hash === this.hash).selector\r\n                .offsetTop,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n};\r\nnew ScrollControl({\r\n    links: navLinks\r\n});\r\n\r\nconst MobileControl = class {\r\n    constructor() {\r\n        this.isActive = false\r\n        this.button = document.querySelector('#nav-toggle_menu')\r\n        this.nav = document.querySelector('#nav')\r\n        this.button.addEventListener('click', () => this.toggle())\r\n        this.main = document.querySelector('.main')\r\n    }\r\n\r\n    toggle() {\r\n        this.isActive = !this.isActive\r\n        // this.isActive ? this.main.classList.add('blur') : this.main.classList.remove('blur')\r\n        this.render()\r\n    }\r\n\r\n    render() {\r\n        if (this.isActive) {\r\n            this.button.classList.add('active')\r\n            this.nav.classList.add('active')\r\n            console.log(this.button, this.nav, 'true 222')\r\n        } else {\r\n            this.button.classList.remove('active')\r\n            this.nav.classList.remove('active')\r\n            console.log(this.button, this.nav,'false 333')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nnew MobileControl()","import {\r\n    div,\r\n    span,\r\n    nav,\r\n    ul,\r\n    li,\r\n    strong,\r\n    a,\r\n    h3,\r\n    p,\r\n    img,\r\n    button,\r\n    setStyle\r\n} from '../helper'\r\nconst TextBracket = class {\r\n    constructor({\r\n        selector\r\n    }) {\r\n        if (!selector) return;\r\n        this.selector = selector;\r\n        const {\r\n            keywords = [], duration = 4000\r\n        } = this.selector.dataset;\r\n        this.duration = duration;\r\n        this.words = keywords.split(\",\");\r\n\r\n        this.current = 0;\r\n        this.createNode();\r\n    }\r\n    createNode() {\r\n        const bracket = div.cloneNode();\r\n        const before = h3.cloneNode();\r\n        const after = h3.cloneNode();\r\n        const wordWrap = div.cloneNode();\r\n        this.wordWrap = wordWrap;\r\n        const word = h3.cloneNode();\r\n        word.className = 'color-primary'\r\n\r\n        before.className = 'color-primary bold mr-10'\r\n        after.className = 'color-primary bold ml-10'\r\n\r\n        setStyle(word, {\r\n            display: 'inline-flex',\r\n            justifyContent: 'center',\r\n            textTransform: 'uppercase',\r\n            fontWeight: '600',\r\n        })\r\n\r\n        setStyle(bracket, {\r\n            display: \"inline-flex\"\r\n        });\r\n\r\n        setStyle(wordWrap, {\r\n            display: \"flex\",\r\n            overflow: 'hidden',\r\n        });\r\n\r\n        before.innerHTML = \"[\";\r\n        after.innerHTML = \"]\";\r\n\r\n        bracket.append(before, wordWrap, after);\r\n\r\n        let maxWidth = 0;\r\n        let maxHeight = 0;\r\n        this.wordsSelector = this.words.map(textWord => {\r\n            const _word = word.cloneNode(true);\r\n            _word.innerHTML = textWord;\r\n            return _word;\r\n        });\r\n        const wordSlider = div.cloneNode()\r\n        setStyle(wordSlider, {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            transition: '0.4s'\r\n        })\r\n        wordSlider.append(...this.wordsSelector)\r\n        this.wordWrap.append(wordSlider);\r\n\r\n        this.selector.append(bracket);\r\n\r\n        this.maxWidth = `${wordSlider.offsetWidth}px`\r\n        this.maxHeight = this.wordsSelector[0].offsetHeight\r\n        setStyle(this.wordWrap, {\r\n            width: this.maxWidth,\r\n            height: `${this.maxHeight}px`,\r\n            position: \"relative\",\r\n        });\r\n        setStyle(wordSlider, {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n        })\r\n        this.wordSlider = wordSlider\r\n        this.update();\r\n    }\r\n    update() {\r\n        console.log(this.current, this.maxHeight)\r\n        setStyle(this.wordSlider, {\r\n            transform: `translateY(-${this.current * this.maxHeight}px)`\r\n        })\r\n        this.current =\r\n            this.current >= this.wordsSelector.length - 1 ? 0 : this.current + 1;\r\n\r\n        setTimeout(() => this.update(), this.duration);\r\n    }\r\n};\r\nconst textBracket = document.querySelector(\".text-bracket\");\r\nnew TextBracket({\r\n    selector: textBracket\r\n});","import {\r\n    div,\r\n    span,\r\n    nav,\r\n    ul,\r\n    li,\r\n    strong,\r\n    a,\r\n    h3,\r\n    p,\r\n    img,\r\n    button,\r\n    setStyle\r\n} from '../helper'\r\nimport {_notification} from '../notification'\r\nconst imageHandler = image => {\r\n    image.addEventListener('mouseover', function (e) {\r\n        const parentHeight = this.parentNode.offsetHeight\r\n        this.style.transition = `${(this.offsetHeight / parentHeight) * 1.5 }s`\r\n        this.style.transform = `translateY(-${this.offsetHeight - parentHeight}px)`\r\n    })\r\n\r\n    image.addEventListener('mouseleave', function (e) {\r\n        this.style.transform = `translateY(0)`\r\n    })\r\n}\r\nconst snakeLink = a.cloneNode(true);\r\nsnakeLink.className = \"snake\";\r\nsnakeLink.target = '_blank'\r\n\r\nconst copyBtn = img.cloneNode()\r\nsetStyle(copyBtn, {\r\n    width: '20px',\r\n    height: '20px',\r\n    margin: '0 auto',\r\n    cursor: 'pointer',\r\n})\r\n\r\ncopyBtn.setAttribute('title', 'Copy to clipboard')\r\ncopyBtn.alt = 'Copy to clipboard'\r\ncopyBtn.src = './img/icon/copy.png'\r\ncopyBtn.className = 'transition hover-animate-scale'\r\nconst dot = span.cloneNode();\r\ndot.className = \"dot\";\r\n\r\nconst pageShapeUrl = span.cloneNode();\r\npageShapeUrl.className = \"page-shape-url\";\r\n\r\nconst pageShape = div.cloneNode();\r\npageShape.className = \"page-shape\";\r\n\r\npageShape.append(dot.cloneNode());\r\npageShape.append(dot.cloneNode());\r\npageShape.append(dot.cloneNode());\r\n\r\nconst json = JSON.stringify({\r\n    sortKeys: [\"all\", \"extension\", \"desktop\", \"mobile\", \"web\"],\r\n    examples: [{\r\n            label: `NormalGame`,\r\n            url: `https://normalgame.net`,\r\n            sortKey: `web,react`,\r\n            img: `normalgame.png`,\r\n            use: [{\r\n                    label: \"React\",\r\n                    url: \"https://reactjs.org/\"\r\n                },\r\n                {\r\n                    label: \"redux\",\r\n                    url: \"https://redux.js.org/\"\r\n                },\r\n                {\r\n                    label: \"redux-saga\",\r\n                    url: \"https://github.com/redux-saga/redux-saga\"\r\n                },\r\n                {\r\n                    label: \"webpack\",\r\n                    url: \"https://webpack.js.org/\"\r\n                },\r\n                {\r\n                    label: \"styled-components\",\r\n                    url: \"https://www.styled-components.com/\"\r\n                },\r\n                {\r\n                    label: \"Laravel\",\r\n                    url: \"http://laravel.su/\"\r\n                }\r\n            ],\r\n            description: `Using: React, Redux, Webpack, recompose, styled-components, redux-saga`\r\n        },\r\n        {\r\n            label: `JustLabelMe`,\r\n            url: `https://just-label.me`,\r\n            sortKey: `web`,\r\n            img: `justlabelme.png`,\r\n            use: [{\r\n                    label: \"JavaScript\",\r\n                    url: \"https://www.javascript.com/\"\r\n                },\r\n                {\r\n                    label: \"stylus\",\r\n                    url: \"http://stylus-lang.com/\"\r\n                },\r\n                {\r\n                    label: \"gulp\",\r\n                    url: \"https://gulpjs.com/\"\r\n                }\r\n            ],\r\n            description: `With JustLabelMe service, you’ll save a lot of time because you can print perfectly onto 4”x6” sticker labels, peel them and place them right on the package!`\r\n        },\r\n        {\r\n            label: `JustLabelMe Extension`,\r\n            url: `https://chrome.google.com/webstore/detail/justlabelme/bpfpmjjojjekdeliaeepcnccikcjpiph`,\r\n            sortKey: `web,extension`,\r\n            img: `justlabelme_ext.jpg`,\r\n            use: [{\r\n                    label: \"React\",\r\n                    url: \"https://reactjs.org/\"\r\n                },\r\n                {\r\n                    label: \"redux\",\r\n                    url: \"https://redux.js.org/\"\r\n                },\r\n                {\r\n                    label: \"webpack\",\r\n                    url: \"https://webpack.js.org/\"\r\n                },\r\n                {\r\n                    label: \"styled-components\",\r\n                    url: \"https://www.styled-components.com/\"\r\n                }\r\n            ],\r\n            description: `Provides the ability to transform & print FBA shipping and product labels while you are on Amazon Seller Central with a single click`\r\n        },\r\n        {\r\n            label: `Widin`,\r\n            url: `https://codingchipmunks.com/widin/`,\r\n            sortKey: `web`,\r\n            img: `widin.png`,\r\n            use: [{\r\n                    label: \"JavaScript\",\r\n                    url: \"https://www.javascript.com/\"\r\n                },\r\n                {\r\n                    label: \"stylus\",\r\n                    url: \"http://stylus-lang.com/\"\r\n                },\r\n                {\r\n                    label: \"pug (jade)\",\r\n                    url: \"https://pugjs.org/api/getting-started.html\"\r\n                },\r\n                {\r\n                    label: \"gulp\",\r\n                    url: \"https://gulpjs.com/\"\r\n                }\r\n            ],\r\n            description: `WidinOnline is a decentralized multifaceted market place set to unify the entire commerce landscape of Africa into a sigle inegrated e-commerce platform`\r\n        },\r\n        {\r\n            label: `nomis`,\r\n            url: `https://nomis.com.ua/`,\r\n            sortKey: `web`,\r\n            img: `nomis.png`,\r\n            use: [{\r\n                    label: \"JavaScript\",\r\n                    url: \"https://www.javascript.com/\"\r\n                },\r\n                {\r\n                    label: \"jQuery\",\r\n                    url: \"https://jquery.com/\"\r\n                },\r\n                {\r\n                    label: \"sass\",\r\n                    url: \"https://sass-lang.com/\"\r\n                },\r\n                {\r\n                    label: \"blade\",\r\n                    url: \"http://laravel.su/docs/5.3/blade\"\r\n                },\r\n                {\r\n                    label: \"gulp\",\r\n                    url: \"https://gulpjs.com/\"\r\n                },\r\n                {\r\n                    label: \"Laravel\",\r\n                    url: \"http://laravel.su/\"\r\n                }\r\n            ],\r\n            description: `Check the reliability and solvency of the counterparty`\r\n        },\r\n        {\r\n            label: `Time tracker`,\r\n            url: `https://chrome.google.com/webstore/detail/time-tracker/hanofejodfbhellaldjonedfpejjcpnl`,\r\n            sortKey: `web,extension`,\r\n            img: `time_tracker.png`,\r\n            use: [{\r\n                    label: \"JavaScript\",\r\n                    url: \"https://www.javascript.com/\"\r\n                },\r\n            ],\r\n            description: `Time Tracker which tracks where you spend time on the web and presents the stats in a useful and intuitive way.`\r\n        }\r\n    ]\r\n});\r\n\r\nconst data = JSON.parse(json);\r\nconst _example = document.querySelector(\"#examples\");\r\n\r\n// const _sortBtn = _example.querySelectorAll('nav ul li btn.btn')\r\n\r\n// _sortBtn.forEach( btn => {\r\n//     btn.addEventListener('click', function() {\r\n//         const sortKey = this.dataset.sort\r\n//     })\r\n// } )\r\n\r\nconst _sortExamples = (sortKey = \"\") =>\r\n    JSON.parse(json).filter(item =>\r\n        item.sortKey.split(\",\").some(key => key === sortKey)\r\n    );\r\n\r\nconst _renderExamples = json => {\r\n    const examplesNode = document.querySelector(\"#examples .examples\");\r\n    const exampleNavigation = nav.cloneNode(true);\r\n    exampleNavigation.className = \"flex flex-align-center flex-justify-sa\";\r\n    const exampleNavigationControl = ul.cloneNode(true);\r\n    exampleNavigationControl.className =\r\n        \"flex flex-align-center flex-justify-sa mb-20\";\r\n    const exampleNavigationControlItem = li.cloneNode(true);\r\n    const exampleNavigationControlButton = button.cloneNode(true);\r\n    exampleNavigationControlButton.className = \"btn text-uppercase\";\r\n\r\n    const exampleList = ul.cloneNode(true);\r\n    exampleList.className =\r\n        \"examples-content flex flex-align-start flex-justify-sa\";\r\n\r\n    const exampleListItem = li.cloneNode(true);\r\n    exampleListItem.className = `card`;\r\n\r\n    const exampleListItemMedia = div.cloneNode(true);\r\n    exampleListItemMedia.className = \"card-media\";\r\n\r\n    const exampleListItemContent = div.cloneNode(true);\r\n    exampleListItemContent.className = `card-content`;\r\n\r\n    const cardLink = snakeLink.cloneNode(true);\r\n    cardLink.className = \"card-label snake\";\r\n\r\n    const cardDescription = p.cloneNode(true);\r\n    cardDescription.className = \"card-description\";\r\n\r\n    data.examples.forEach(example => {\r\n        const _cardDescription = cardDescription.cloneNode(true);\r\n        _cardDescription.innerHTML = example.description;\r\n\r\n        const _cardLink = cardLink.cloneNode(true);\r\n        _cardLink.href = example.url;\r\n        _cardLink.innerHTML = example.label;\r\n\r\n        // const _cardDescription = cardDescription.cloneNode(true)\r\n\r\n        const _strong = strong.cloneNode(true);\r\n        _strong.append(_cardLink);\r\n\r\n        const _use = strong.cloneNode(true);\r\n\r\n        const _useWrapper = p.cloneNode();\r\n        _use.innerHTML = \"Use: \";\r\n        _useWrapper.append(_use);\r\n\r\n        example.use.forEach((use, idx) => {\r\n            const _link = a.cloneNode();\r\n            _link.href = use.url;\r\n            _link.className = \"snake card-link\";\r\n            _link.target = \"_blank\";\r\n            _link.innerHTML = `${use.label}${\r\n          idx === example.use.length - 1 ? \"\" : \",\"\r\n        }`;\r\n            _link.style.display = \"inline-flex\";\r\n            _link.style.flexWrap = \"wrap\";\r\n            _useWrapper.append(_link);\r\n        });\r\n\r\n        // _cardDescription.innerHTML = example.description\r\n\r\n        const _cardMedia = exampleListItemMedia.cloneNode(true);\r\n        const _img = img.cloneNode(true);\r\n        _img.src = `./img/examples/${example.img}`;\r\n        imageHandler(_img)\r\n\r\n        \r\n\r\n        const _pageShapeUrl = pageShapeUrl.cloneNode();\r\n        _pageShapeUrl.innerHTML = example.url;\r\n\r\n        const _copy = copyBtn.cloneNode()\r\n        _copy.addEventListener('click', () => {\r\n            const range = document.createRange();\r\n            range.selectNode(_pageShapeUrl);\r\n            window.getSelection().addRange(range);\r\n            try {\r\n            // Теперь, когда мы выбрали текст , выполним команду копирования\r\n                const successful = document.execCommand(\"copy\");\r\n                \r\n                const mess = successful ? \"Successful\" : \"Failed\";\r\n                _notification.add({ label: `Copied!`, mess })\r\n            } catch (err) {\r\n                console.log(\"Oops, unable to copy\");\r\n            }\r\n\r\n            // Снятие выделения - ВНИМАНИЕ: вы должны использовать\r\n            // removeRange(range) когда это возможно\r\n            window.getSelection().removeRange(range);\r\n        })\r\n\r\n        const _pageShape = pageShape.cloneNode(true);\r\n        _pageShape.append(_pageShapeUrl, _copy);\r\n\r\n        \r\n        _cardMedia.append(_img);\r\n\r\n        const _cardContent = exampleListItemContent.cloneNode(true);\r\n\r\n        _cardContent.append(_strong);\r\n        _cardContent.append(_useWrapper);\r\n        _cardContent.append(_cardDescription);\r\n\r\n        const _exampleListItem = exampleListItem.cloneNode(true);\r\n        _exampleListItem.dataset.sort = example.sortKey;\r\n\r\n        _exampleListItem.append(_pageShape);\r\n        _exampleListItem.append(_cardMedia);\r\n        _exampleListItem.append(_cardContent);\r\n\r\n        exampleList.append(_exampleListItem);\r\n    });\r\n\r\n    const checkSort = sortKey => {\r\n        exampleList.querySelectorAll(\".card\").forEach(card => {\r\n            // console.log(card, card.dataset.sort)\r\n            if (\r\n                card.dataset.sort.split(\",\").some(key => key === sortKey) ||\r\n                sortKey === \"all\"\r\n            ) {\r\n                card.classList.add(\"show_scale\");\r\n                card.classList.remove(\"hide_scale\");\r\n            } else {\r\n                card.classList.remove(\"show_scale\");\r\n                card.classList.add(\"hide_scale\");\r\n            }\r\n            examplesNode\r\n                .querySelectorAll(\"ul li button[data-sort]\")\r\n                .forEach(btn => btn.classList.remove(\"btn-primary\"));\r\n            examplesNode\r\n                .querySelector(`ul li button[data-sort=\"${sortKey}\"]`)\r\n                .classList.add(\"btn-primary\");\r\n        });\r\n    };\r\n    data.sortKeys.forEach((sortKey, key) => {\r\n        const _exampleNavigationControlButton = exampleNavigationControlButton.cloneNode(\r\n            true\r\n        );\r\n        _exampleNavigationControlButton.innerHTML = sortKey;\r\n        _exampleNavigationControlButton.dataset.sort = sortKey;\r\n        if (!key) _exampleNavigationControlButton.classList.add(\"btn-primary\");\r\n\r\n        _exampleNavigationControlButton.addEventListener(\"click\", function () {\r\n            checkSort(sortKey);\r\n        });\r\n        const _exampleNavigationControlItem = exampleNavigationControlItem.cloneNode(\r\n            true\r\n        );\r\n        _exampleNavigationControlItem.append(_exampleNavigationControlButton);\r\n        exampleNavigationControl.append(_exampleNavigationControlItem);\r\n    });\r\n\r\n    examplesNode.append(exampleNavigationControl);\r\n    examplesNode.append(exampleList);\r\n};\r\n\r\n_renderExamples(data);\r\n\r\n","import { http } from '../helper'\r\nimport { _notification } from '../notification'\r\nconst form = document.getElementById('contact_form')\r\n\r\nform.addEventListener('submit', event => {\r\n    event.preventDefault()\r\n    const [name, email, message] = [form.querySelector('#contact_name').value, form.querySelector('#contact_email').value, form.querySelector('#contact_message').value]\r\n\r\n    const data = {\r\n        name,\r\n        email,\r\n        message\r\n    }\r\n    form.classList.add('loading')\r\n\r\n    http.post({ \r\n        data, url: `message`, \r\n        success: () => {\r\n            _notification.add({ label: `Message sending`, mess: 'You messages sended seccessfull :)' })\r\n            form.classList.remove('loading')\r\n        }, \r\n        error: () => {\r\n            _notification.add({ label: `Message sending`, mess: 'You messages not sended :(' }) \r\n            form.classList.remove('loading')\r\n        }\r\n    })\r\n\r\n\r\n})","\r\nimport './notification'\r\nimport './lazyLoad'\r\nimport './navigation'\r\nimport './textBracket'\r\n// import './animation'\r\nimport './examples'\r\nimport './contacts'\r\n\r\n// import './http'\r\nparticlesJS(\"particles-js\", {\r\n  particles: {\r\n    number: {\r\n      value: 40,\r\n      density: {\r\n        enable: true,\r\n        value_area: 500\r\n      }\r\n    },\r\n    color: {\r\n      value: \"#59DBD5\"\r\n    },\r\n    shape: {\r\n      type: \"circle\",\r\n      stroke: {\r\n        width: 0,\r\n        color: \"#505050\"\r\n      },\r\n      polygon: {\r\n        nb_sides: 5\r\n      },\r\n      image: {\r\n        src: \"img/github.svg\",\r\n        width: 100,\r\n        height: 100\r\n      }\r\n    },\r\n    opacity: {\r\n      value: 0.5,\r\n      random: false,\r\n      anim: {\r\n        enable: false,\r\n        speed: 1,\r\n        opacity_min: 0.1,\r\n        sync: false\r\n      }\r\n    },\r\n    size: {\r\n      value: 3,\r\n      random: true,\r\n      anim: {\r\n        enable: false,\r\n        speed: 40,\r\n        size_min: 0.1,\r\n        sync: false\r\n      }\r\n    },\r\n    line_linked: {\r\n      enable: true,\r\n      distance: 150,\r\n      color: \"#505050\",\r\n      opacity: 0.4,\r\n      width: 1\r\n    },\r\n    move: {\r\n      enable: true,\r\n      speed: 6,\r\n      direction: \"none\",\r\n      random: false,\r\n      straight: false,\r\n      out_mode: \"out\",\r\n      bounce: false,\r\n      attract: {\r\n        enable: true,\r\n        rotateX: 600,\r\n        rotateY: 1200\r\n      }\r\n    }\r\n  },\r\n  interactivity: {\r\n    detect_on: \"canvas\",\r\n    events: {\r\n      onhover: {\r\n        enable: true,\r\n        mode: \"grab\"\r\n      },\r\n      onclick: {\r\n        enable: true,\r\n        mode: \"push\"\r\n      },\r\n      resize: true\r\n    },\r\n    modes: {\r\n      grab: {\r\n        distance: 140,\r\n        line_linked: {\r\n          opacity: 1\r\n        }\r\n      },\r\n      bubble: {\r\n        distance: 400,\r\n        size: 40,\r\n        duration: 2,\r\n        opacity: 8,\r\n        speed: 3\r\n      },\r\n      repulse: {\r\n        distance: 200,\r\n        duration: 0.4\r\n      },\r\n      push: {\r\n        particles_nb: 4\r\n      },\r\n      remove: {\r\n        particles_nb: 2\r\n      }\r\n    }\r\n  },\r\n  retina_detect: true\r\n});\r\n// bracket text\r\n\r\n// lazy loading\r\n\r\n\r\nconst animationHandler = class {\r\n  constructor({\r\n      selectors\r\n  }) {\r\n      this.selectors = selectors\r\n      this.handle()\r\n  }\r\n\r\n  handle() {\r\n      this.selectors.forEach(selector => {\r\n          const {\r\n              animate,\r\n              start\r\n          } = selector.dataset;\r\n          switch (start) {\r\n              case \"load\":\r\n                  document.addEventListener(\"DOMContentLoaded\", () => {\r\n                      selector.classList.add(animate);\r\n                  });\r\n              case \"scroll\":\r\n                  window.addEventListener(\"scroll\", () => this.checkScroll(selector, animate));\r\n                  this.checkScroll(selector, animate)\r\n                  break;\r\n\r\n              default:\r\n                  break;\r\n          }\r\n      });\r\n\r\n  }\r\n\r\n  checkScroll(selector, animate) {\r\n      if (selector.getBoundingClientRect().top <= document.documentElement.clientHeight) {\r\n          selector.classList.add(animate);\r\n      }\r\n\r\n  }\r\n\r\n}\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  new animationHandler({\r\n      selectors: [...document.querySelectorAll(\".animated\")]\r\n  })\r\n  \r\n})\r\n\r\nconsole.log([...document.querySelectorAll(\".animated\")])"]}