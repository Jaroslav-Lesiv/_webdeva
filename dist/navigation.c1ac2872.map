{"version":3,"sources":["assets\\js\\navigation\\index.js"],"names":["navLinks","document","querySelectorAll","ScrollControl","links","hash","map","selector","link","getAttribute","nodeList","querySelector","window","addEventListener","sectionHandler","linksHandler","windowHeight","documentElement","clientHeight","node","coords","getBoundingClientRect","isCurrent","top","bottom","updateNavigation","forEach","event","preventDefault","updateSections","classList","add","remove","scrollTo","find","offsetTop","behavior","yyy"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAgBA,IAAMA,WAAWC,SAASC,gBAAT,CAA0B,mBAA1B,CAAjB;;AAEA,IAAMC;AACF,iCAEG;AAAA;;AAAA,8BADCC,KACD;AAAA,YADCA,KACD,8BADS,EACT;;AAAA;;AACC,aAAKC,IAAL,GAAY,IAAZ;;AAEA,aAAKD,KAAL,GAAa,6BAAIA,KAAJ,GAAWE,GAAX,CAAe;AAAA,mBAAS;AACjCC,0BAAUC,IADuB;AAEjCH,sBAAMG,KAAKC,YAAL,CAAkB,MAAlB;AAF2B,aAAT;AAAA,SAAf,CAAb;AAIA,aAAKC,QAAL,gCACO,KAAKN,KAAL,CAAWE,GAAX,CAAe;AAAA,mBAAS;AACvBC,0BAAUN,SAASU,aAAT,CAAuBH,KAAKH,IAA5B,CADa;AAEvBA,sBAAMG,KAAKH;AAFY,aAAT;AAAA,SAAf,CADP;;AAOAO,eAAOC,gBAAP,CAAwB,QAAxB,EAAkC;AAAA,mBAAK,MAAKC,cAAL,EAAL;AAAA,SAAlC;AACA,aAAKC,YAAL;AACH;;AAnBC;AAAA;AAAA,yCAqBe;AACb,gBAAMC,eAAef,SAASgB,eAAT,CAAyBC,YAA9C;AADa;AAAA;AAAA;;AAAA;AAEb,qCAAiB,KAAKR,QAAtB,8HAAgC;AAAA,wBAAvBS,IAAuB;;AAC5B,wBAAMC,SAASD,KAAKZ,QAAL,CAAcc,qBAAd,EAAf;AACA,wBAAMC,YAAYF,OAAOG,GAAP,IAAc,CAAd,IAAmBH,OAAOI,MAAP,GAAgB,EAAhB,GAAqB,CAA1D;AACA,wBAAIF,SAAJ,EAAe;AACX,6BAAKjB,IAAL,GAAYc,KAAKd,IAAjB;AACA,6BAAKoB,gBAAL;AACA;AACH;AACJ;AAVY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWhB;AAhCC;AAAA;AAAA,uCAkCa;AAAA;;AACX,iBAAKrB,KAAL,CAAWsB,OAAX,CAAmB,gBAAQ;AACvBlB,qBAAKD,QAAL,CAAcM,gBAAd,CAA+B,OAA/B,EAAwC,iBAAS;AAC7Cc,0BAAMC,cAAN;AACA,2BAAKvB,IAAL,GAAYG,KAAKH,IAAjB;AACA,2BAAKwB,cAAL;AACH,iBAJD;AAKH,aAND;AAOH;AA1CC;AAAA;AAAA,2CA2CiB;AAAA;;AACf,iBAAKzB,KAAL,CAAWsB,OAAX,CACI;AAAA,uBACAlB,KAAKH,IAAL,KAAc,OAAKA,IAAnB,GACAG,KAAKD,QAAL,CAAcuB,SAAd,CAAwBC,GAAxB,CAA4B,aAA5B,CADA,GAEAvB,KAAKD,QAAL,CAAcuB,SAAd,CAAwBE,MAAxB,CAA+B,aAA/B,CAHA;AAAA,aADJ;AAMH;AAlDC;AAAA;AAAA,yCAoDe;AAAA;;AACbpB,mBAAOqB,QAAP,CAAgB;AACZV,qBAAK,KAAKb,QAAL,CAAcwB,IAAd,CAAmB;AAAA,2BAAQf,KAAKd,IAAL,KAAc,OAAKA,IAA3B;AAAA,iBAAnB,EAAoDE,QAApD,CACA4B,SAFO;AAGZC,0BAAU;AAHE,aAAhB;AAKH;AA1DC;;AAAA;AAAA,GAAN;AA4DA,IAAMC,MAAM,IAAIlC,aAAJ,CAAkB;AAC1BC,WAAOJ;AADmB,CAAlB,CAAZ","file":"navigation.c1ac2872.map","sourceRoot":"..\\src","sourcesContent":["import {\r\n    div,\r\n    span,\r\n    nav,\r\n    ul,\r\n    li,\r\n    strong,\r\n    a,\r\n    h3,\r\n    p,\r\n    img,\r\n    button,\r\n    setStyle\r\n} from '../helper'\r\n\r\n\r\nconst navLinks = document.querySelectorAll(\"#nav ul.list li a\");\r\n\r\nconst ScrollControl = class {\r\n    constructor({\r\n        links = []\r\n    }) {\r\n        this.hash = null;\r\n\r\n        this.links = [...links].map(link => ({\r\n            selector: link,\r\n            hash: link.getAttribute(\"href\")\r\n        }));\r\n        this.nodeList = [\r\n            ...this.links.map(link => ({\r\n                selector: document.querySelector(link.hash),\r\n                hash: link.hash\r\n            }))\r\n        ];\r\n\r\n        window.addEventListener(\"scroll\", _ => this.sectionHandler());\r\n        this.linksHandler();\r\n    }\r\n\r\n    sectionHandler() {\r\n        const windowHeight = document.documentElement.clientHeight;\r\n        for (let node of this.nodeList) {\r\n            const coords = node.selector.getBoundingClientRect();\r\n            const isCurrent = coords.top >= 0 || coords.bottom - 23 > 0;\r\n            if (isCurrent) {\r\n                this.hash = node.hash;\r\n                this.updateNavigation();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    linksHandler() {\r\n        this.links.forEach(link => {\r\n            link.selector.addEventListener(\"click\", event => {\r\n                event.preventDefault();\r\n                this.hash = link.hash;\r\n                this.updateSections();\r\n            });\r\n        });\r\n    }\r\n    updateNavigation() {\r\n        this.links.forEach(\r\n            link =>\r\n            link.hash === this.hash ?\r\n            link.selector.classList.add(\"btn-primary\") :\r\n            link.selector.classList.remove(\"btn-primary\")\r\n        );\r\n    }\r\n\r\n    updateSections() {\r\n        window.scrollTo({\r\n            top: this.nodeList.find(node => node.hash === this.hash).selector\r\n                .offsetTop,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n};\r\nconst yyy = new ScrollControl({\r\n    links: navLinks\r\n});"]}